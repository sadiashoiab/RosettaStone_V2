# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  solutionPath: 'RosettaStone_V2.sln'

steps:

- task: UseDotNet@2
  displayName: 'Installing .NET Core 3.x SDK'
  inputs:
    packageType: 'sdk'
    version: '3.x'
    includePreviewVersions: false

- task: DotNetCoreCLI@2
  displayName: 'Restoring Packages'
  inputs:
    command: 'restore'
    projects: '$(solutionPath)'
    feedsToUse: 'select'
    arguments: '--runtime linux-x64'

- task: DotNetCoreCLI@2
  displayName: 'Build Solution'
  inputs:
    command: 'build'
    projects: '$(solutionPath)'
    arguments: '--configuration $(BuildConfiguration) --no-restore --runtime linux-x64'

- task: DotNetCoreCLI@2
  displayName: 'Test Solution'
  inputs:
    command: 'test'
    projects: '$(solutionPath)'
    arguments: '--configuration $(BuildConfiguration) --no-restore --runtime linux-x64'

- task: DotNetCoreCLI@2
  displayName: 'Publish Solution'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'Rosetta/Rosetta.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory) --no-restore --runtime linux-x64 --self-contained'

- task: PublishBuildArtifacts@1
  displayName: 'Publishing Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
